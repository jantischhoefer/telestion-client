---
id: 0xA6
# housekeeper + AnomalyLogger

threads:
  Collector:
    firstTime: 1100_ms
    period: 1_s
    priority: 500

configurable_parameters:
  DEFAULT_HISTORY_RATE:
    type: std::uint16_t
    default_value: 1
  STANDARD_TELEMETRY_SUBSERVICE_ID:
    type: std::uint8_t
    default_value: 1
  anomalyHistorySize:
    type: uint8_t
    default_value: 20

# Achtung: historySize und AnomalyHistory und -Histogramm Length immer auf den gleichen Wert setzen!!!
# Wird (noch?) nicht automatisch gleichgesetzt.

# topics this app may post to
publish:
  - corfu::appIsAliveTopic #@ todo: threadIsAliveTopic
  - corfu::standardTelemetryTopic
  - corfu::extendedTelemetryTopic

# all apps do already receive the telecommand topic
subscribe:
  corfu::anomalyTopic: direct

# commands
telecommands:
  NOP:
    id: 1
  SetHistoryRate:
    id: 2
    fields:
      rate: std::uint16_t
  SendHistogram:
    id: 3
  SendHistory:
    id: 4
  ClearAnomalyCounter:
    id: 5

# structs
structs:
  HistogramEntry:
    anomalyId: uint16_t
    counted: uint8_t
  HistoryEntry:
    anomalyId: uint16_t
    isCritical: bool
    reportTime: int64_t

# telemetry
standard_telemetry:
  historyRate: std::uint16_t
  anomalyCtr: uint16_t
  lastAnomalyID: uint16_t # @todo wieder reinmachen
  iteration: uint16_t # debug output

extended_telemetry:
  AnomalyHistogram:
    id: 3
    fields:
      entries:
        array:
          length: 20
          type: HistogramEntry
  AnomalyHistory:
    id: 2
    fields:
      history:
        array:
          length: 20
          type: HistoryEntry
